name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask
          pip install Werkzeug

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install flask
          pip install Werkzeug
          pip install pytest-flask

      - name: Run Tests
        run: |
          pytest --tb=short -v <<EOF
          - test: Register a new user
            method: POST
            endpoint: /register
            data:
              username: testuser
              password: testpassword
            expected_status_code: 302
            expected_redirect: /

          - test: Login with valid credentials
            method: POST
            endpoint: /login
            data:
              username: testuser
              password: testpassword
            expected_status_code: 302
            expected_redirect: /

          - test: Login with invalid credentials
            method: POST
            endpoint: /login
            data:
              username: testuser
              password: wrongpassword
            expected_status_code: 200
            expected_response_contains: Login

          - test: Add a new task
            setup:
              - method: POST
                endpoint: /login
                data:
                  username: testuser
                  password: testpassword
            method: POST
            endpoint: /add
            data:
              task: New Task
            expected_status_code: 302
            expected_redirect: /

          - test: Mark a task as completed
            setup:
              - method: POST
                endpoint: /add
                data:
                  task: New Task
            method: POST
            endpoint: /complete/0
            expected_status_code: 302
            expected_redirect: /

          - test: Delete an ongoing task
            setup:
              - method: POST
                endpoint: /add
                data:
                  task: New Task
            method: POST
            endpoint: /delete/0
            expected_status_code: 302
            expected_redirect: /

          - test: Delete a completed task
            setup:
              - method: POST
                endpoint: /add
                data:
                  task: Completed Task
              - method: POST
                endpoint: /complete/0
            method: POST
            endpoint: /delete_completed/0
            expected_status_code: 302
            expected_redirect: /

          - test: Logout
            setup:
              - method: POST
                endpoint: /login
                data:
                  username: testuser
                  password: testpassword
            method: POST
            endpoint: /logout
            expected_status_code: 302
            expected_redirect: /login
          EOF

  security_scanning:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Bandit
        run: pip install bandit

      - name: Run Security Scan with Bandit
        run: bandit -r app.py

terraform-apply-staging:
    name: Terraform Apply staging
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deployment
    outputs:
      instance_ip: ${{ steps.get_instance_ip.outputs.juice_ip }}
    needs: terraform-plan-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5  # Ensure the same version as in terraform-plan
  
      - name: GCP Auth
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
  
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
  
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
  
      - name: Terraform Init
        run: terraform init 
          
      - name: Download tfplan artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.TF_PLAN_FILE }}
          path: deployment
  
      - name: Terraform Apply Staging
        run: |
          terraform workspace select -or-create=true ${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
          terraform apply -auto-approve ${{ env.TF_PLAN_FILE }}
  
      - name: Get Instance IP
        id: get_instance_ip
        run: echo "juice_ip=$(terraform output -raw juice_shop_instance_ip)" >> $GITHUB_OUTPUT

dast_testing:
    runs-on: ubuntu-latest
    needs: terraform-apply-staging
    continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Test Environment
        run: |
          echo "Deploying to test environment..."
          # Add deployment commands here
          
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        env: 
          INSTANCE_IP: ${{ needs.terraform-apply-staging.outputs.instance_ip }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
          target: "http://${{ env.INSTANCE_IP }}:3000"
          cmd_options: |
            chmod a+rwx '/zap/wrk/zap.yaml'  
          allow_issue_writing: false  

      
      - name: Upload Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: zap_report.html
          path: .
          retention-days: 1
            

  deploy:
    runs-on: ubuntu-latest
    needs: dast_testing
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment..."
          # Add deployment commands here
