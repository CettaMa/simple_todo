name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask
          pip install Werkzeug

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install flask
          pip install Werkzeug
          pip install pytest-flask

      - name: Run Tests
        run: |
          pytest --tb=short -v <<EOF
          - test: Register a new user
            method: POST
            endpoint: /register
            data:
              username: testuser
              password: testpassword
            expected_status_code: 302
            expected_redirect: /

          - test: Login with valid credentials
            method: POST
            endpoint: /login
            data:
              username: testuser
              password: testpassword
            expected_status_code: 302
            expected_redirect: /

          - test: Login with invalid credentials
            method: POST
            endpoint: /login
            data:
              username: testuser
              password: wrongpassword
            expected_status_code: 200
            expected_response_contains: Login

          - test: Add a new task
            setup:
              - method: POST
                endpoint: /login
                data:
                  username: testuser
                  password: testpassword
            method: POST
            endpoint: /add
            data:
              task: New Task
            expected_status_code: 302
            expected_redirect: /

          - test: Mark a task as completed
            setup:
              - method: POST
                endpoint: /add
                data:
                  task: New Task
            method: POST
            endpoint: /complete/0
            expected_status_code: 302
            expected_redirect: /

          - test: Delete an ongoing task
            setup:
              - method: POST
                endpoint: /add
                data:
                  task: New Task
            method: POST
            endpoint: /delete/0
            expected_status_code: 302
            expected_redirect: /

          - test: Delete a completed task
            setup:
              - method: POST
                endpoint: /add
                data:
                  task: Completed Task
              - method: POST
                endpoint: /complete/0
            method: POST
            endpoint: /delete_completed/0
            expected_status_code: 302
            expected_redirect: /

          - test: Logout
            setup:
              - method: POST
                endpoint: /login
                data:
                  username: testuser
                  password: testpassword
            method: POST
            endpoint: /logout
            expected_status_code: 302
            expected_redirect: /login
          EOF

  security_scanning:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Bandit
        run: pip install bandit

      - name: Run Security Scan with Bandit
        run: bandit -r app.py

  dast_testing:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Test Environment
        run: |
          echo "Deploying to test environment..."
          # Add deployment commands here
      
      - name: Download Burp Suite CLI
        run: |
          curl -L -o burpsuite_community_linux_arm64_v2024_11_2.sh "https://portswigger-cdn.net/burp/releases/download?product=community&version=2024.11.2&type=Linux"

      - name: Install Burp Suite CLI
        run: |
          chmod +x burpsuite_community_linux_arm64_v2024_11_2.sh
          ./burpsuite_community_linux_arm64_v2024_11_2.sh --accept-license --mode unattended

      - name: Verify Installation
        run: |
          burp-suite --version  # Periksa apakah Burp Suite CLI berhasil terinstal

      - name: Run Burp Suite Scan
        run: |
          burp-suite-cli/bin/burp-suite-cli.bat \
            --headless \
            --project-file=burp-suite-cli/reports/project.burp \
            --report=burp-suite-cli/reports/burp-report.html \
            --url=http://127.0.0.1:5000

      - name: Upload Burp Suite Report
        uses: actions/upload-artifact@v3
        with:
          name: burp-suite-report
          path: burp-suite-cli/reports/burp-report.html
            

  deploy:
    runs-on: ubuntu-latest
    needs: dast_testing
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment..."
          # Add deployment commands here
