name: Flask App Test

on:
  push:
    branches: [ cobaan ]
  pull_request:
    branches: [ cobaan ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
 
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Specify the Python version you need

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest  # Ensure pytest is installed

    - name: Run tests
      run: |
        pytest test/testing.py  # Run tests in the test/ directory

  security_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Specify the Python version you need

    - name: Install Bandit
      run: |
        python -m pip install --upgrade pip
        pip install bandit

    - name: Run Bandit security scan
      run: |
        bandit -r app.py  # Run Bandit on the app.py file

  dast_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Specify the Python version you need

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start Flask app
      run: |
        python app.py &
        sleep 5  # Wait for the app to start

    - name: ZAP Scan
      uses: zaproxy/action-full-scan@v0.12.0
      with:
        target: 'http://localhost:5000'
      env:
        fail-if-alert-found: high  # Pipeline will fail on high severity alerts

    - name: Save ZAP Scan Report
      run: |
        mkdir zap_scan_report
        mv *.zip zap_scan_report/zap_scan.zip

    - name: Upload ZAP Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: zap_scan_report
        path: zap_scan_report/zap_scan.zip
        
  deploy:
    runs-on: ubuntu-latest
    needs: [test, security_scan, dast_scan]

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Specify the Python version you need

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy to Staging
      run: |
        echo "Deploy to staging server"
        # Add your deployment script here





